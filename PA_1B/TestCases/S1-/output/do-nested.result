CLASS
CLASS
'{'
STATIC
STATIC
VOID
VOID
IDENTIFIER
')'
'{'
INT
INT
INT
INT
INT
INT
IDENTIFIER
COMPLEX
COMPLEX
COMPLEX
COMPLEX
COMPLEX
COMPLEX
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'='
'='
'='
'='
'='
'='
'='
'='
'='
'-'
'-'
'-'
'-'
'-'
'-'
'-'
'-'
'-'
LITERAL
LITERAL
LITERAL
';'
';'
';'
';'
';'
';'
';'
INT
INT
INT
INT
INT
INT
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'='
'='
'='
'='
'='
'='
'='
'='
'='
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
READ_INTEGER
';'
';'
';'
';'
';'
';'
';'
DDO
DDO
DDO
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'<'
'<'
'<'
'<'
'<'
'<'
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
':'
':'
':'
':'
':'
':'
':'
DDO
DDO
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'<'
'<'
'<'
'<'
'<'
'<'
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
':'
':'
':'
':'
':'
':'
':'
DDO
DDO
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'<'
'<'
'<'
'<'
'<'
'<'
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
':'
':'
':'
':'
':'
':'
':'
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'='
'='
'='
'='
'='
'='
'='
'='
'='
'@'
'@'
'@'
'@'
'@'
'@'
'@'
'@'
'@'
IDENTIFIER
IDENTIFIER
';'
';'
';'
';'
';'
';'
';'
';'
OOD
OOD
DDD
DDD
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
IDENTIFIER
'<'
'<'
'<'
'<'
'<'
'<'
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
':'
':'
':'
':'
':'
':'
':'
PRINT
PRINT
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
LITERAL
')'
')'
')'
')'
')'
')'
')'
')'
OOD
'}'
'}'
<eos>
program
    class Main <empty>
        static func main voidtype
            formals
            stmtblock
                vardef n inttype
                vardef z comptype
                assign
                    varref z
                    neg
                        imgconst 1j
                vardef x inttype
                assign
                    varref x
                    readint
                do
                    branches
                        branch
                            les
                                varref x
                                intconst 1
                            do
                                branches
                                    branch
                                        les
                                            varref x
                                            intconst 2
                                        do
                                            branches
                                                branch
                                                    les
                                                        varref x
                                                        intconst 3
                                                    assign
                                                        varref n
                                                        re
                                                            varref z
                        branch
                            les
                                varref x
                                intconst 10
                            print
                                stringconst "2333"
