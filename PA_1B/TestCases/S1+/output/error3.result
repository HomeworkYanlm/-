Program::CLASS:(3,1)
ClassDef::CLASS:(3,1)
ExtendsClause::'{':(3,12)
FieldList::STATIC:(4,5)
Field::STATIC:(4,5)
Type::VOID:(4,12)
SimpleType::VOID:(4,12)
ArrayType::IDENTIFIER:(4,17)
Formals::')':(4,22)
StmtBlock::'{':(4,24)
StmtList::INT:(5,9)
Stmt::INT:(5,9)
VariableDef::INT:(5,9)
Variable::INT:(5,9)
Type::INT:(5,9)
SimpleType::INT:(5,9)
ArrayType::IDENTIFIER:(5,13)
StmtList::'=':(5,15)
{ '@' <eof> <eos> VOID BOOL INT STRING CLASS NULL THIS WHILE FOR IF ELSE RETURN BREAK NEW CASE OOD DDO DCOPY COMPLEX SCOPY SUPER PRINTCOMP PRINT READ_INTEGER '[' READ_LINE LITERAL IDENTIFIER '!' STATIC INSTANCEOF '#' '$' DDD '(' ')' ',' '-' ';' '{' '}' }{ <eof> <eos> '@' VOID BOOL INT STRING CLASS NULL THIS WHILE FOR IF ELSE RETURN BREAK NEW CASE OOD DDO DCOPY COMPLEX SCOPY SUPER PRINTCOMP PRINT '[' READ_INTEGER READ_LINE LITERAL IDENTIFIER STATIC '!' INSTANCEOF '#' '$' DDD '(' ')' ',' '-' '{' ';' '}' }{ '@' <eof> <eos> VOID BOOL INT STRING CLASS NULL THIS WHILE FOR IF ELSE RETURN BREAK NEW CASE OOD DDO DCOPY COMPLEX SCOPY SUPER PRINTCOMP PRINT READ_INTEGER '[' READ_LINE LITERAL IDENTIFIER '!' STATIC INSTANCEOF '#' '$' DDD '(' ')' ',' '-' ';' '{' '}' }none:'='
skip:'='
finsh:LITERAL
begin
Stmt::LITERAL:(5,17)
SimpleStmt::LITERAL:(5,17)
Expr::LITERAL:(5,17)
Expr1::LITERAL:(5,17)
Expr2::LITERAL:(5,17)
Expr3::LITERAL:(5,17)
Expr4::LITERAL:(5,17)
Expr5::LITERAL:(5,17)
Expr6::LITERAL:(5,17)
Expr7::LITERAL:(5,17)
Expr8::LITERAL:(5,17)
Expr9::LITERAL:(5,17)
Constant::LITERAL:(5,17)
ExprT8::';':(5,18)
ExprT6::';':(5,18)
ExprT5::';':(5,18)
ExprT4::';':(5,18)
ExprT3::';':(5,18)
ExprT2::';':(5,18)
ExprT1::';':(5,18)
Assignment::';':(5,18)
StmtList::'}':(6,5)
FieldList::'}':(7,1)
ClassList::<eos>:(8,1)
*** Error at (5,15): syntax error
